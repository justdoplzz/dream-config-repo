spring:
  application:
   name: gateway-service  # git에 있는 확장자 제외한 설정파일 이름.

# 유레카 클라이언트 설정
eureka:
 client:
   register-with-eureka: true  # 유레카에 등록할지 여부.
   fetch-registry: true  # 유레카에서 조회할지 여부
   service-url:
     defaultZone: http://localhost:8761/eureka # 서비스를 등록할 서버 주소를 지정

#라우팅
spring: 
 cloud:
   gateway:
     routes:          
       - id: menu-service
         uri: lb://MENU-SERVICE # uri: http://localhost:8001 # 포워딩 할 주소, http://localhost:8000/menu 로 들어오면 http://localhost:8001로 포워딩
         predicates:
           - Path=/menu/** # 해당 gateway 서버의 /menu/**로 들어오는 menu-service로 인식하겠다는 조건
         filters:
           - RewritePath=/menu/?(?<segment>.*), /$\{segment}   
             
       - id: product-service
         uri: lb://PRODUCT-SERVICE 
         predicates:
           - Path=/product/** 
         filters:
           - RewritePath=/product/?(?<segment>.*), /$\{segment}                      
             
       - id: manage-service
         uri: lb://MANAGE-SERVICE 
         predicates:
           - Path=/manage/** 
         filters:
           - RewritePath=/manage/?(?<segment>.*), /$\{segment}
       
       - id: loan-service
         uri: lb://LOAN-SERVICE 
         predicates:
           - Path=/apply/** 
         filters:
           - RewritePath=/apply/?(?<segment>.*), /$\{segment} 
                                
       - id: list-service
         uri: lb://LIST-SERVICE 
         predicates:
           - Path=/list/** 
         filters:
           - RewritePath=/list/?(?<segment>.*), /$\{segment}   
           
       - id: save-service
         uri: lb://SAVE-SERVICE 
         predicates:
           - Path=/save/** 
         filters:
           - RewritePath=/save/?(?<segment>.*), /$\{segment}
                           
       - id: user-service
         uri: lb://USER-SERVICE # uri: http://localhost:64412 # 포워딩할 주소, http://localhost:8000/user 로 들어오면 http://localhost:64412 로 포워딩
         predicates:
           - Path=/user/** # 해당 gateway 서버의 /user/**로 들어오는 요은 user-service로 인식하겠다는 조건
         filters:
           - RewritePath=/user/?(?<segment>.*), /$\{segment}
 security:
   oauth2:
     client:
       provider:
         keycloak:
           issuer-uri: http://192.168.1.54:8080/auth/realms/MSA
           user-name-attribute: preferred_username
       registration:
         keycloak:
#            provider: keycloak
           client-id: spring-gateway-client
           client-secret: WEcACPUTWPfuhPrEz3bBaHcl7OLLmYX1
           authorization-grant-type: authorization_code
           redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
